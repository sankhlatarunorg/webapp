# This file was autogenerated by the 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# See https://www.packer.io/docs/templates/hcl_templates/blocks/packer for more info
packer {
  required_plugins {
    googlecompute = {
      source  = "github.com/hashicorp/googlecompute"
      version = "~> 1"
    }
  }
}

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints for more info.
variable "credentials_file" {
  type    = string
  default = "credentials.json"
}

variable "image_name" {
  type    = string
  default = "csye6225-image-a3-dummy"
}

variable "project_id" {
  type    = string
  default = "csye6225tarundev"
}

variable "region" {
  type    = string
  default = "us-east1"
}

variable "source_image" {
  type    = string
  default = "centos-stream-8-v20240110"
}

variable "type" {
  type    = string
  default = "googlecompute"
}

variable "zone" {
  type    = string
  default = "us-east1-b"
}

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/source
source "googlecompute" "autogenerated_1" {
  credentials_file = "${var.credentials_file}"
  image_name       = "${var.image_name}"
  project_id       = "${var.project_id}"
  source_image     = "${var.source_image}"
  ssh_username     = "centos"
  zone             = "${var.zone}"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  sources = ["source.googlecompute.autogenerated_1"]

  provisioner "shell" {
    inline = ["sudo adduser csye6225 --shell /usr/sbin/nologin"]
  }

  provisioner "shell" {
    script = "./scripts/copy-artifact.sh"
  }

  provisioner "file" {
    destination = "/tmp/webapp/webapp.zip"
    source      = "./webapp.zip"
  }

  provisioner "shell" {
    script = "./scripts/install_setup_db_dependencies.sh"
  }

  provisioner "file" {
    destination = "/tmp/csye-6225.service"
    direction   = "upload"
    source      = "systemd-service/csye-6225.service"
  }

  provisioner "shell" {
    script = "./scripts/opsAgent.sh"
  }

  provisioner "file" {
    direction   = "upload"
    source      = "./config.yaml"
    destination = "/tmp/config.yaml"
  }

  provisioner "shell" {
    inline = [
      "sudo mv /tmp/config.yaml /etc/google-cloud-ops-agent/config.yaml",
      "sudo systemctl restart google-cloud-ops-agent"
    ]
  }

  provisioner "shell" {
    inline = ["sudo mv /tmp/csye-6225.service /etc/systemd/system/", "sudo systemctl daemon-reload", "sudo systemctl enable csye-6225"]
  }

}
