name: Node.js CI

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    name : Build
    runs-on: ubuntu-latest
    strategy:
        matrix:
          node-version: [18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js  ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Start PostgreSQL
        env:
          DB_HOST:     ${{ secrets.DB_HOST }}
          DB_PORT:     ${{ secrets.DB_PORT }}
          DB_USER:     ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME:     ${{ secrets.DB_NAME }}
          DB_DIALECT : ${{ secrets.DB_DIALECT }}
        run: |
          sudo systemctl start postgresql.service
          sudo systemctl status postgresql.service
          pg_isready
          sudo service postgresql restart
          sudo su - postgres -c "psql --echo-all -U postgres -d postgres --command \"ALTER USER postgres WITH PASSWORD 'postgres';\""  
          echo "*** DONE"
        # sudo su - postgres -c "psql -s \"CREATE DATABASE ${{secrets.DB_NAME}};\""
        # sudo su - postgres -c "psql -s \"CREATE USER ${{secrets.DB_USER}} WITH PASSWORD '${{secrets.DB_PASSWORD}}';\""
        # sudo su - postgres -c "psql -s \"GRANT ALL PRIVILEGES ON DATABASE ${{secrets.DB_NAME}} TO ${{secrets.DB_USER}};\""
      #          sudo su - postgres -c "psql --echo-all -U postgres -d postgres --command \"ALTER USER postgres WITH PASSWORD 'postgres';\""         
      #  sudo su - postgres -c "psql --echo-all -U postgres -d postgres --command \"alter user postgres with password 'postgres';\""
      # sudo -u postgres createuser -s -d -r -w runner
      # - name: Run shell script
      #   run: |
      #     update_postgres_auth.sh
            
      - name: Install NPM dependencies
        run: npm ci

      - name: Run Hello world
        run: echo "Hello World"
 
      - name: Checking if environment variables are set
        run: echo  ${{ secrets.DB_HOST }} ${{ secrets.DB_PORT}} ${{secrets.DB_USER}} ${{secrets.DB_PASSWORD}} ${{secrets.DB_NAME}} ${{secrets.DB_DIALECT}}

      - name: Run tests
        env:
          DB_HOST:     ${{ secrets.DB_HOST }}
          DB_PORT:     ${{ secrets.DB_PORT }}
          DB_USER:     ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME:     ${{ secrets.DB_NAME }}
          DB_DIALECT : ${{ secrets.DB_DIALECT }}
        run: npm start & sleep 8 && npm test
