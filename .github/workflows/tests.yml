name: Node.js CI

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    name : Build
    runs-on: ubuntu-latest
    strategy:
        matrix:
          node-version: [18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js  ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Start PostgreSQL
        env:
          DB_HOST:     ${{ secrets.DB_HOST }}
          DB_PORT:     ${{ secrets.DB_PORT }}
          DB_USER:     ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME:     ${{ secrets.DB_NAME }}
          DB_DIALECT : ${{ secrets.DB_DIALECT }}
        run: |
          sudo systemctl start postgresql.service
          sudo systemctl status postgresql.service
          pg_isready
          sudo su - postgres -c "psql --echo-all -U postgres -d postgres --command \"ALTER USER postgres WITH PASSWORD 'postgres';\""
          sudo service postgresql restart  
          echo "*** DONE"
            
      - name: Install NPM dependencies
        run: npm ci

      - name: Run Hello world
        run: echo "Hello World"
 
      - name: Checking if environment variables are set
        run: echo  ${{ secrets.DB_HOST }} ${{ secrets.DB_PORT}} ${{secrets.DB_USER}} ${{secrets.DB_PASSWORD}} ${{secrets.DB_NAME}} ${{secrets.DB_DIALECT}}

      - name: Run tests
        env:
          DB_HOST:     ${{ secrets.DB_HOST }}
          DB_PORT:     ${{ secrets.DB_PORT }}
          DB_USER:     ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME:     ${{ secrets.DB_NAME }}
          DB_DIALECT : ${{ secrets.DB_DIALECT }}
        run: npm start & sleep 8 && npm test
  format_packer_template:
    name: Format Packer Template
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Packer
        uses: hashicorp/setup-packer@v1.10.1
      
      - name: Format Packer Template
        run: packer fmt -check -write=false
      
  validate_packer_template:
    name: Validate Packer Template
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Validate Packer
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          target: webappImage.json
          arguments: "-on-error=abort"
      
      
  build_custom_image:
    name: Build Custom Image
    needs: [validate_packer_template]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.event.head_commit.author.username == github.actor
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Packer
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort"
      
      - name: Build Custom Image
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          target: webappImage.json
          arguments: "-on-error=abort"
